{"version":3,"file":"index.cjs.js","sources":["../src/transition.ts","../src/particle.ts","../src/utils.ts","../src/particle-source.ts","../src/body.ts","../src/physical-particle.ts","../src/physical-particle-source.ts","../src/scene.ts"],"sourcesContent":["import { Vector3, Quaternion } from 'three'\nimport { ParticleState } from '~/particle'\n\nexport interface Pausable {\n  pause(): void\n}\n\nexport type TransitionExecutor = (\n  transition: ParticleState,\n  complete: () => void\n) => Pausable | void | undefined\n\nexport class Transition implements ParticleState {\n  private animation?: Pausable\n  public readonly position: Vector3 = new Vector3()\n  public readonly quaternion: Quaternion = new Quaternion()\n  public readonly scale: Vector3 = new Vector3()\n\n  public static show: TransitionExecutor = (transition, complete) => {\n    transition.scale.set(1, 1, 1)\n    complete()\n  }\n\n  public static hide: TransitionExecutor = (transition, complete) => {\n    transition.scale.set(0, 0, 0)\n    complete()\n  }\n\n  public static compose(\n    ...executors: TransitionExecutor[]\n  ): TransitionExecutor {\n    return (transition: ParticleState, complete: () => void): Pausable => {\n      let animationsToComplete = executors.length\n      const animations = executors.map(executor => executor(transition, () => {\n        --animationsToComplete || complete()\n      }))\n\n      return {\n        pause: () => animations.forEach(animation => {\n          animation && animation.pause()\n        })\n      }\n    }\n  }\n\n  public start(executor: TransitionExecutor, complete: () => void): void {\n    this.stop()\n    this.animation = executor(this, () => {\n      complete()\n      this.animation = undefined\n    }) as Pausable | undefined\n  }\n\n  public stop(): void {\n    if (this.animation && !this.animation.pause) console.log(this.animation)\n    this.animation && this.animation.pause()\n  }\n\n  public dispose(): void {\n    this.animation && this.animation.pause()\n    this.animation = undefined\n  }\n}\n","import { Vector3, Quaternion, Matrix4 } from 'three'\nimport { Transition, TransitionExecutor } from '~/transition'\n\nexport interface ParticleState {\n  position: Vector3\n  quaternion: Quaternion\n  scale: Vector3\n}\n\nexport class Particle implements ParticleState {\n  public readonly position: Vector3 = new Vector3()\n  public readonly quaternion: Quaternion = new Quaternion()\n  public readonly scale: Vector3 = new Vector3(1, 1, 1)\n  public readonly matrix: Matrix4 = new Matrix4()\n  public readonly transition: Transition = new Transition()\n  public appended: boolean = false\n  public removed: boolean = false\n\n  public get needsUpdate(): boolean {\n    return this.appended || this.removed\n  }\n\n  public append(\n    transition?: TransitionExecutor,\n    complete?: (particle: this) => void\n  ): void {\n    this.appended = true\n    this.transition.start(transition || Transition.show, () => {\n      complete && complete(this)\n    })\n  }\n\n  public remove(\n    transition?: TransitionExecutor,\n    complete?: (particle: this) => void\n  ): void {\n    this.transition.start(transition || Transition.hide, () => {\n      this.removed = true\n      this.appended = false\n      complete && complete(this)\n    })\n  }\n\n  public update(): boolean {\n    if (!this.needsUpdate) return false\n\n    this.matrix.compose(\n      this.position.clone().add(this.transition.position),\n      this.quaternion.clone().multiply(this.transition.quaternion),\n      this.scale.clone().multiply(this.transition.scale)\n    )\n\n    if (this.removed) this.removed = false\n\n    return true\n  }\n\n  public dispose(): void {\n    this.transition.dispose()\n  }\n}\n","import {\n  Object3D,\n  Mesh,\n  Line,\n  Points,\n  InstancedMesh,\n  Material,\n  Geometry,\n  BufferGeometry,\n  InstancedBufferGeometry,\n  Color\n} from 'three'\n\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\n\nimport {\n  BufferGeometryUtils\n} from 'three/examples/jsm/utils/BufferGeometryUtils'\n\nexport type ColoredMaterial = Material & { color: Color }\n\nexport function isMesh(object: Object3D): object is Mesh {\n  return (object as Mesh).isMesh\n}\n\nexport function isLine(object: Object3D): object is Line {\n  return (object as Line).isLine\n}\n\nexport function isPoints(object: Object3D): object is Points {\n  return (object as Points).isPoints\n}\n\nexport function isInstancedMesh(object: Object3D): object is InstancedMesh {\n  return (object as InstancedMesh).isInstancedMesh\n}\n\nexport function isBufferGeometry(\n  geometry: Geometry | BufferGeometry\n): geometry is BufferGeometry {\n  return (geometry as BufferGeometry).isBufferGeometry\n}\n\nexport function isInstancedBufferGeometry(\n  geometry: Geometry | BufferGeometry | InstancedBufferGeometry\n): geometry is InstancedBufferGeometry {\n  return (geometry as unknown as {\n    isInstancedBufferGeometry: boolean\n  }).isInstancedBufferGeometry\n}\n\nexport function mergeGLTF(gltf: GLTF): {\n  geometry: BufferGeometry\n  material: ColoredMaterial | ColoredMaterial[]\n} {\n  const geometries: BufferGeometry[] = []\n  const materials: ColoredMaterial[] = []\n\n  gltf.scene.traverse((mesh) => {\n    if (!isMesh(mesh)) return\n\n    mesh.updateMatrixWorld(true)\n    mesh.geometry.applyMatrix(mesh.matrixWorld)\n\n    geometries.push(mesh.geometry as BufferGeometry)\n    materials.push(mesh.material as ColoredMaterial)\n  })\n\n  if (!geometries.length) throw new Error(\n    'Could not find any geometry in GLTF scene'\n  )\n\n  return {\n    geometry: geometries.length === 1\n      ? geometries[0]\n      : BufferGeometryUtils.mergeBufferGeometries(geometries, true),\n\n    material: materials.length === 1\n      ? materials[0]\n      : materials\n  }\n}\n","import {\n  Color,\n  Object3D,\n  Vector3,\n  Geometry,\n  BufferGeometry,\n  InstancedMesh\n} from 'three'\n\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { Particle } from '~/particle'\nimport { TransitionExecutor } from '~/transition'\nimport { mergeGLTF, ColoredMaterial } from '~/utils'\n\nenum ParticleSourceMutation {\n  Append = 1,\n  Remove = -1\n}\n\ninterface ParticleSourceTransitionExecutors {\n  append?: TransitionExecutor\n  remove?: TransitionExecutor\n}\n\nexport interface ParticleSourceMutationExecutors<\n  P extends Particle = Particle\n> {\n  prepare?: (particle: P) => void\n  complete?: (particle: P) => void\n  transition?: TransitionExecutor\n}\n\nexport interface ParticleSourceParameters {\n  geometry?: Geometry | BufferGeometry\n  material?: ColoredMaterial | ColoredMaterial[]\n  count?: number\n  color?: Color | number\n  autoScale?: number\n  autoScaleAxis?: 'x' | 'y' | 'z' | 'average'\n  transition?: ParticleSourceTransitionExecutors\n}\n\nexport class ParticleSource<P extends Particle = Particle> extends Object3D {\n  private mesh?: InstancedMesh\n  private _geometry?: Geometry | BufferGeometry\n  private _material?: ColoredMaterial | ColoredMaterial[]\n  private _color!: Color | number\n\n  protected autoScale?: number\n  protected autoScaleAxis: 'x' | 'y' | 'z' | 'average'\n\n  public particles: P[] = []\n  public appendedParticles: number = 0\n  public transition: ParticleSourceTransitionExecutors\n  public count: number\n\n  public constructor({\n    geometry = undefined,\n    material = undefined,\n    count = 0,\n    color = 0xffffff,\n    autoScale = undefined,\n    autoScaleAxis = 'average',\n    transition = {}\n  }: ParticleSourceParameters = {}) {\n    super()\n\n    this.transition = transition\n    this.autoScale = autoScale\n    this.autoScaleAxis = autoScaleAxis\n    this.geometry = geometry\n    this.material = material\n    this.color = color\n    this.count = count\n  }\n\n  public get generated(): boolean {\n    return !!this.mesh\n  }\n\n  public get geometry(): Geometry | BufferGeometry | undefined {\n    return this._geometry\n  }\n\n  public set geometry(v: Geometry | BufferGeometry | undefined) {\n    this._geometry = v\n    this.updateGeometry()\n  }\n\n  public get material(): ColoredMaterial | ColoredMaterial[] | undefined {\n    return this._material\n  }\n\n  public set material(v: ColoredMaterial | ColoredMaterial[] | undefined) {\n    this._material = v\n    this.updateMaterial()\n  }\n\n  public get color(): Color | number {\n    return this._color\n  }\n\n  public set color(v: Color | number) {\n    this._color = v\n\n    if (!this.material) return\n\n    if (Array.isArray(this.material)) {\n      this.material.forEach(material => material.color.set(v as Color))\n    } else {\n      this.material.color.set(v as Color)\n    }\n  }\n\n  protected updateGeometry(): void {\n    if (!this.geometry) return\n\n    if (this.autoScale !== undefined) {\n      this.geometry.boundingBox || this.geometry.computeBoundingBox()\n\n      const size = this.geometry.boundingBox.getSize(new Vector3())\n      const scale = this.autoScaleAxis === 'average'\n        ? this.autoScale / (size.x + size.y + size.z) * 3\n        : this.autoScale / size[this.autoScaleAxis]\n\n      this.geometry.scale(scale, scale, scale)\n    }\n\n    if (this.mesh) {\n      this.mesh.geometry = this.geometry\n    }\n  }\n\n  protected updateMaterial(): void {\n    if (!this.mesh || !this.material) return\n\n    if (Array.isArray(this.material)) {\n      this.material.forEach(material => material.color.set(this.color as Color))\n    } else {\n      this.material.color.set(this.color as Color)\n    }\n\n    this.mesh.material = this.material\n  }\n\n  protected createParticle(): P {\n    return new Particle() as P\n  }\n\n  protected prepareParticle(\n    mutation: ParticleSourceMutation,\n    prepare?: (particle: P) => void\n  ): P {\n    if (!this.mesh) throw new Error(\n      'The mesh and particles have not been generated, ' +\n      'call generate() before calling appendParticle() or removeParticle()'\n    )\n\n    let particle!: P\n\n    switch (mutation) {\n      case ParticleSourceMutation.Append:\n        if (this.appendedParticles >= this.mesh.count) throw new Error(\n          `All ${this.mesh.count} particles have already been appended, ` +\n          'increase count and call generate() to append more particles.'\n        )\n\n        particle = this.particles[this.appendedParticles++]\n\n        break\n\n      case ParticleSourceMutation.Remove:\n        if (this.appendedParticles <= 0) throw new Error(\n          `All ${this.mesh.count} particles have already been removed, ` +\n          'you cannot remove more particles.'\n        )\n\n        particle = this.particles[--this.appendedParticles]\n\n        break\n    }\n\n    prepare && prepare(particle)\n\n    return particle\n  }\n\n  public useGLTF(gltf: GLTF): void {\n    const { geometry, material } = mergeGLTF(gltf)\n\n    this.geometry = geometry\n    this.material = material\n  }\n\n  public loadGLTF(url: string, complete?: (gltf: GLTF) => void): void {\n    new GLTFLoader().load(url, (gltf) => {\n      this.useGLTF(gltf)\n      complete && complete(gltf)\n    })\n  }\n\n  public generate(): void {\n    if (!this.geometry || !this.material) throw new Error(\n      'geometry and material must be set before calling generate()'\n    )\n\n    const {\n      particles,\n      count\n    } = this\n\n    this.disposeMesh()\n\n    this.mesh = new InstancedMesh(this.geometry, this.material, count)\n    this.mesh.frustumCulled = false\n\n    this.appendedParticles = Math.min(this.appendedParticles, count)\n    while (particles.length < count) particles.push(this.createParticle())\n    this.disposeParticles(count)\n\n    this.add(this.mesh)\n  }\n\n  public disposeMesh(): void {\n    if (!this.mesh) return\n\n    this.remove(this.mesh)\n    this.mesh = undefined\n  }\n\n  public disposeParticles(index: number = 0): void {\n    this.particles.splice(index).forEach(particle => particle.dispose())\n  }\n\n  public disposeGeometry(): void {\n    if (!this.geometry) return\n\n    this.geometry.dispose()\n    this.geometry = undefined\n  }\n\n  public disposeMaterial(): void {\n    if (!this.material) return\n\n    Array.isArray(this.material)\n      ? this.material.forEach(material => material.dispose())\n      : this.material.dispose()\n\n    this.material = undefined\n  }\n\n  public update(): void {\n    if (!this.mesh) return\n\n    const mesh = this.mesh\n\n    this.particles.forEach((particle, index) => {\n      if (!particle.update()) return\n      mesh.setMatrixAt(index, particle.matrix)\n      mesh.instanceMatrix.needsUpdate = true\n    })\n  }\n\n  public appendParticle({\n    prepare = undefined,\n    complete = undefined,\n    transition = this.transition.append\n  }: ParticleSourceMutationExecutors<P> = {}): void {\n    this\n      .prepareParticle(ParticleSourceMutation.Append, prepare)\n      .append(transition, complete)\n  }\n\n  public removeParticle({\n    prepare = undefined,\n    complete = undefined,\n    transition = this.transition.remove\n  }: ParticleSourceMutationExecutors<P> = {}): void {\n    this\n      .prepareParticle(ParticleSourceMutation.Remove, prepare)\n      .remove(transition, complete)\n  }\n\n  public appendParticles({\n    amount = Infinity,\n    complete = undefined,\n    completeAll = undefined,\n    ...executors\n  }: ParticleSourceMutationExecutors<P> & {\n    amount?: number\n    completeAll?: (particles: P[]) => void\n  } = {}): void {\n    const particles: P[] = []\n    amount = Math.min(amount, this.count - this.appendedParticles)\n\n    for (var i = 0; i < amount; i++) this.appendParticle({\n      ...executors,\n      complete: (particle) => {\n        particles.push(particle)\n        complete && complete(particle)\n        particles.length === amount && completeAll && completeAll(particles)\n      }\n    })\n  }\n\n  public removeParticles({\n    amount = Infinity,\n    complete = undefined,\n    completeAll = undefined,\n    ...executors\n  }: ParticleSourceMutationExecutors<P> & {\n    amount?: number\n    completeAll?: (particles: P[]) => void\n  } = {}): void {\n    const particles: P[] = []\n    amount = Math.min(amount, this.appendedParticles)\n\n    for (var i = 0; i < amount; i++) this.removeParticle({\n      ...executors,\n      complete: (particle) => {\n        particles.push(particle)\n        complete && complete(particle)\n        particles.length === amount && completeAll && completeAll(particles)\n      }\n    })\n  }\n}\n","import { Body as BaseBody, Shape } from 'cannon'\n\nexport class Body extends BaseBody {\n  public removeShape(shape: Shape): this {\n    const index = this.shapes.indexOf(shape)\n\n    if (index !== -1) {\n      this.shapes.splice(index, 1)\n      this.shapeOffsets.splice(index, 1)\n      this.shapeOrientations.splice(index, 1)\n\n      this.updateMassProperties()\n      this.updateBoundingRadius()\n\n      this.aabbNeedsUpdate = true\n    }\n\n    return this\n  }\n\n  public clearShapes(update: boolean = true): this {\n    if (this.shapes.length) {\n      this.shapes.splice(0)\n      this.shapeOffsets.splice(0)\n      this.shapeOrientations.splice(0)\n\n      if (update) {\n        this.updateMassProperties()\n        this.updateBoundingRadius()\n\n        this.aabbNeedsUpdate = true\n      }\n    }\n\n    return this\n  }\n}\n","import { Shape, Vec3 } from 'cannon'\nimport { Vector3, Quaternion } from 'three'\nimport { Particle } from '~/particle'\nimport { Body } from '~/body'\nimport { TransitionExecutor } from '~/transition'\n\nexport class PhysicalParticle extends Particle {\n  protected readonly freezeDelay: number = Infinity\n  protected readonly freezeVelocityFactor: Vec3 = new Vec3(0.9, 1, 0.9)\n  protected readonly freezeAngularVelocityFactor: Vec3 = new Vec3(1, 1, 1)\n  protected readonly freezeThreshold: number = 0.001\n  protected freezeTimeout?: number\n  protected freezing: boolean = false\n  protected frozen: boolean = false\n\n  public readonly body: Body\n\n  public constructor() {\n    super()\n    this.body = new Body(this.bodyParameters)\n  }\n\n  protected get bodyParameters(): { [parameter: string]: unknown } {\n    return {\n      mass: 1,\n      type: Body.DYNAMIC\n    }\n  }\n\n  protected freeze(): void {\n    const { velocity,  angularVelocity } = this.body\n\n    if (velocity.almostZero(this.freezeThreshold)) {\n      this.frozen = true\n      this.freezing = false\n\n      this.body.type = Body.STATIC\n\n      return\n    }\n\n    const { freezeVelocityFactor, freezeAngularVelocityFactor } = this\n\n    velocity.x *= freezeVelocityFactor.x\n    velocity.y *= freezeVelocityFactor.y\n    velocity.z *= freezeVelocityFactor.z\n\n    angularVelocity.x *= freezeAngularVelocityFactor.x\n    angularVelocity.y *= freezeAngularVelocityFactor.y\n    angularVelocity.z *= freezeAngularVelocityFactor.z\n  }\n\n  protected requestFreeze(): void {\n    if (this.freezeDelay === Infinity) return\n    this.cancelFreeze()\n    this.freezeTimeout = window.setTimeout(() => {\n      this.freezing = true\n    }, this.freezeDelay)\n  }\n\n  protected cancelFreeze(): void {\n    if (this.freezeTimeout === undefined) return\n    clearTimeout(this.freezeTimeout)\n    this.freezeTimeout = undefined\n  }\n\n  public append(\n    transition?: TransitionExecutor,\n    complete?: (particle: this) => void\n  ): void {\n    this.freezing = this.frozen = false\n    this.body.type = Body.DYNAMIC\n    super.append(transition, (particle) => {\n      this.requestFreeze()\n      complete && complete(particle)\n    })\n  }\n\n  public remove(\n    transition?: TransitionExecutor,\n    complete?: (particle: this) => void\n  ): void {\n    this.cancelFreeze()\n    super.remove(transition, complete)\n  }\n\n  public update(): boolean {\n    if (!this.needsUpdate) return false\n    this.freezing && this.freeze()\n    this.frozen || this.synchronizeBody()\n    return super.update()\n  }\n\n  public clearBodyShape(): void {\n    this.body.clearShapes()\n  }\n\n  public setBodyShape(shape: Shape): void {\n    this.body.clearShapes(false)\n    this.body.addShape(shape)\n  }\n\n  public synchronizeBody(): void {\n    this.position.copy(this.body.position as unknown as Vector3)\n    this.quaternion.copy(this.body.quaternion as unknown as Quaternion)\n  }\n\n  public resetBodyPosition(): void {\n    const { x, y, z } = this.position\n    this.body.position.set(x, y, z)\n  }\n\n  public resetBodyQuaternion(): void {\n    const { x, y, z, w } = this.quaternion\n    this.body.quaternion.set(x, y, z, w)\n  }\n\n  public resetBodyVelocity(): void {\n    this.body.velocity.set(0, 0, 0)\n  }\n\n  public resetBodyAngularVelocity(): void {\n    this.body.angularVelocity.set(0, 0, 0)\n  }\n}\n","import { World, Box, Vec3, Shape } from 'cannon'\nimport { PhysicalParticle } from '~/physical-particle'\n\nimport {\n  ParticleSource,\n  ParticleSourceParameters,\n  ParticleSourceMutationExecutors\n} from '~/particle-source'\n\nexport interface PhysicalParticleSourceParameters\n  extends ParticleSourceParameters {\n  world: World\n}\n\nexport class PhysicalParticleSource extends ParticleSource<PhysicalParticle> {\n  public readonly world: World\n  protected shape?: Shape\n\n  public constructor({\n    world,\n    ...parameters\n  }: PhysicalParticleSourceParameters) {\n    super(parameters)\n    this.world = world\n  }\n\n  protected updateGeometry(): void {\n    super.updateGeometry()\n\n    if (this.geometry) {\n      const shape = this.shape = this.createShape()\n      this.particles.forEach(particle => particle.setBodyShape(shape))\n    } else {\n      this.particles.forEach(particle => particle.clearBodyShape())\n    }\n  }\n\n  protected createShape(): Shape {\n    this.geometry!.boundingBox || this.geometry!.computeBoundingBox()\n\n    const box = this.geometry!.boundingBox\n\n    return new Box(new Vec3(\n      (box.max.x - box.min.x) / 2,\n      (box.max.y - box.min.y) / 2,\n      (box.max.z - box.min.z) / 2\n    ))\n  }\n\n  protected createParticle(): PhysicalParticle {\n    const particle = new PhysicalParticle()\n    this.shape && particle.setBodyShape(this.shape)\n    return particle\n  }\n\n  public appendParticle({\n    prepare = undefined,\n    ...executors\n  }: ParticleSourceMutationExecutors<PhysicalParticle> = {}): void {\n    super.appendParticle({\n      ...executors,\n      prepare: (particle) => {\n        particle.resetBodyVelocity()\n        particle.resetBodyAngularVelocity()\n\n        prepare && prepare(particle)\n\n        particle.resetBodyPosition()\n        particle.resetBodyQuaternion()\n\n        this.world.addBody(particle.body)\n      }\n    })\n  }\n\n  public removeParticle({\n    complete = undefined,\n    ...executors\n  }: ParticleSourceMutationExecutors<PhysicalParticle> = {}): void {\n    super.removeParticle({\n      ...executors,\n      complete: (particle) => {\n        this.world.remove(particle.body)\n        complete && complete(particle)\n      }\n    })\n  }\n}\n","import {\n  Scene as BaseScene,\n  Material,\n  Mesh,\n  WebGLRenderer,\n  Camera,\n  Geometry,\n  BufferGeometry,\n  Group,\n  Line,\n  Points,\n  InstancedMesh\n} from 'three'\n\nimport {\n  isMesh,\n  isLine,\n  isPoints,\n  isInstancedMesh,\n  isInstancedBufferGeometry\n} from '~/utils'\n\ntype RenderCallback = (\n  renderer: WebGLRenderer,\n  scene: BaseScene,\n  camera: Camera,\n  geometry: Geometry | BufferGeometry,\n  material: Material,\n  group: Group\n) => void\n\nexport class Scene extends BaseScene {\n  private _onBeforeRender: RenderCallback = this.setOverrideMaterial\n  private _onAfterRender: RenderCallback = this.unsetOverrideMaterial\n  private _overrideMaterial?: Material\n  private objectMaterials?: { [id: number]: Material | Material[] }\n  private drawableObjects?: (Mesh | Line | Points | InstancedMesh)[]\n  private instancedOverrideMaterials: {\n    [id: number]: { version: number, material: Material }\n  } = {}\n\n  public drawableObjectsNeedUpdate: boolean = false\n  public handleInstancedOverrideMaterials: boolean = true\n\n  public get onBeforeRender(): RenderCallback {\n    return this._onBeforeRender\n  }\n\n  public set onBeforeRender(v: RenderCallback) {\n    if (v) {\n      this._onBeforeRender = (...parameters) => {\n        this.setOverrideMaterial()\n        v(...parameters)\n      }\n    } else {\n      this._onBeforeRender = this.setOverrideMaterial\n    }\n  }\n\n  public get onAfterRender(): RenderCallback {\n    return this._onAfterRender\n  }\n\n  public set onAfterRender(v: RenderCallback) {\n    if (v) {\n      this._onAfterRender = (...parameters) => {\n        this.unsetOverrideMaterial()\n        v(...parameters)\n      }\n    } else {\n      this._onAfterRender = this.unsetOverrideMaterial\n    }\n  }\n\n  private setOverrideMaterial(): void {\n    if (!this.handleInstancedOverrideMaterials) return\n\n    const overrideMaterial = this.overrideMaterial\n\n    if (!overrideMaterial) return\n\n    this._overrideMaterial = overrideMaterial\n    this.overrideMaterial = null\n\n    const id = overrideMaterial.id\n    const version = (overrideMaterial as unknown as { version: number }).version\n\n    this.objectMaterials = {}\n\n    this.traverseDrawableObjects((object) => {\n      let material: Material = overrideMaterial\n\n      if (\n        isInstancedMesh(object) ||\n        isInstancedBufferGeometry(object.geometry)\n      ) {\n        let instancedMaterial = this.instancedOverrideMaterials[id]\n\n        if (instancedMaterial && instancedMaterial.version === version) {\n          material = instancedMaterial.material\n        } else {\n          material = overrideMaterial.clone()\n\n          if (instancedMaterial) {\n            instancedMaterial.material.dispose()\n            instancedMaterial.material = material\n            instancedMaterial.version = version\n          } else {\n            instancedMaterial = { version, material }\n          }\n\n          this.instancedOverrideMaterials[id] = instancedMaterial\n        }\n      }\n\n      this.objectMaterials![object.id] = object.material\n      object.material = material\n    })\n  }\n\n  private unsetOverrideMaterial(): void {\n    if (\n      !this.handleInstancedOverrideMaterials ||\n      !this._overrideMaterial\n    ) return\n\n    this.traverseDrawableObjects((object) => {\n      object.material = this.objectMaterials![object.id]\n    })\n\n    this.overrideMaterial = this._overrideMaterial\n    this._overrideMaterial = undefined\n    this.objectMaterials = undefined\n  }\n\n  public traverseDrawableObjects(\n    callback: (object: Mesh | Line | Points | InstancedMesh) => void\n  ): void {\n    if (!this.drawableObjects || this.drawableObjectsNeedUpdate) {\n      this.drawableObjectsNeedUpdate = false\n      this.drawableObjects = []\n\n      this.traverse((object) => {\n        if (\n          !isMesh(object) &&\n          !isLine(object) &&\n          !isPoints(object) &&\n          !isInstancedMesh(object)\n        ) return\n\n        object.visible && callback(object)\n        this.drawableObjects!.push(object)\n      })\n    } else {\n      this.drawableObjects.forEach(object => object.visible && callback(object))\n    }\n  }\n\n  public dispose(): void {\n    super.dispose()\n\n    this.drawableObjects = undefined\n\n    for (var id in this.instancedOverrideMaterials) {\n      const material = this.instancedOverrideMaterials[id].material\n      material.dispose()\n      delete this.instancedOverrideMaterials[id]\n    }\n  }\n}\n"],"names":["Vector3","Quaternion","Matrix4","BufferGeometryUtils","tslib_1.__extends","GLTFLoader","InstancedMesh","Object3D","BaseBody","Vec3","Box","BaseScene"],"mappings":";;;;;;;;;;IAYA;QAEkB,aAAQ,GAAY,IAAIA,aAAO,EAAE,CAAA;QACjC,eAAU,GAAe,IAAIC,gBAAU,EAAE,CAAA;QACzC,UAAK,GAAY,IAAID,aAAO,EAAE,CAAA;KA8C/C;IAlCe,kBAAO,GAArB;QACE,mBAAkC;aAAlC,UAAkC,EAAlC,qBAAkC,EAAlC,IAAkC;YAAlC,8BAAkC;;QAElC,OAAO,UAAC,UAAyB,EAAE,QAAoB;YACrD,IAAI,oBAAoB,GAAG,SAAS,CAAC,MAAM,CAAA;YAC3C,IAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,UAAU,EAAE;gBAChE,EAAE,oBAAoB,IAAI,QAAQ,EAAE,CAAA;aACrC,CAAC,GAAA,CAAC,CAAA;YAEH,OAAO;gBACL,KAAK,EAAE,cAAM,OAAA,UAAU,CAAC,OAAO,CAAC,UAAA,SAAS;oBACvC,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,CAAA;iBAC/B,CAAC,GAAA;aACH,CAAA;SACF,CAAA;KACF;IAEM,0BAAK,GAAZ,UAAa,QAA4B,EAAE,QAAoB;QAA/D,iBAMC;QALC,IAAI,CAAC,IAAI,EAAE,CAAA;QACX,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,EAAE;YAC9B,QAAQ,EAAE,CAAA;YACV,KAAI,CAAC,SAAS,GAAG,SAAS,CAAA;SAC3B,CAAyB,CAAA;KAC3B;IAEM,yBAAI,GAAX;QACE,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK;YAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QACxE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAA;KACzC;IAEM,4BAAO,GAAd;QACE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAA;QACxC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;KAC3B;IA3Ca,eAAI,GAAuB,UAAC,UAAU,EAAE,QAAQ;QAC5D,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QAC7B,QAAQ,EAAE,CAAA;KACX,CAAA;IAEa,eAAI,GAAuB,UAAC,UAAU,EAAE,QAAQ;QAC5D,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QAC7B,QAAQ,EAAE,CAAA;KACX,CAAA;IAoCH,iBAAC;CAlDD;;;ICHA;QACkB,aAAQ,GAAY,IAAIA,aAAO,EAAE,CAAA;QACjC,eAAU,GAAe,IAAIC,gBAAU,EAAE,CAAA;QACzC,UAAK,GAAY,IAAID,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACrC,WAAM,GAAY,IAAIE,aAAO,EAAE,CAAA;QAC/B,eAAU,GAAe,IAAI,UAAU,EAAE,CAAA;QAClD,aAAQ,GAAY,KAAK,CAAA;QACzB,YAAO,GAAY,KAAK,CAAA;KA4ChC;IA1CC,sBAAW,iCAAW;aAAtB;YACE,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAA;SACrC;;;OAAA;IAEM,yBAAM,GAAb,UACE,UAA+B,EAC/B,QAAmC;QAFrC,iBAQC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;QACpB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,EAAE;YACnD,QAAQ,IAAI,QAAQ,CAAC,KAAI,CAAC,CAAA;SAC3B,CAAC,CAAA;KACH;IAEM,yBAAM,GAAb,UACE,UAA+B,EAC/B,QAAmC;QAFrC,iBASC;QALC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,CAAC,IAAI,EAAE;YACnD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAA;YACnB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;YACrB,QAAQ,IAAI,QAAQ,CAAC,KAAI,CAAC,CAAA;SAC3B,CAAC,CAAA;KACH;IAEM,yBAAM,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,KAAK,CAAA;QAEnC,IAAI,CAAC,MAAM,CAAC,OAAO,CACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EACnD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAC5D,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CACnD,CAAA;QAED,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAA;QAEtC,OAAO,IAAI,CAAA;KACZ;IAEM,0BAAO,GAAd;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAA;KAC1B;IACH,eAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCvCe,MAAM,CAAC,MAAgB;IACrC,OAAQ,MAAe,CAAC,MAAM,CAAA;CAC/B;AAED,SAAgB,MAAM,CAAC,MAAgB;IACrC,OAAQ,MAAe,CAAC,MAAM,CAAA;CAC/B;AAED,SAAgB,QAAQ,CAAC,MAAgB;IACvC,OAAQ,MAAiB,CAAC,QAAQ,CAAA;CACnC;AAED,SAAgB,eAAe,CAAC,MAAgB;IAC9C,OAAQ,MAAwB,CAAC,eAAe,CAAA;CACjD;AAED,SAMgB,yBAAyB,CACvC,QAA6D;IAE7D,OAAQ,QAEN,CAAC,yBAAyB,CAAA;CAC7B;AAED,SAAgB,SAAS,CAAC,IAAU;IAIlC,IAAM,UAAU,GAAqB,EAAE,CAAA;IACvC,IAAM,SAAS,GAAsB,EAAE,CAAA;IAEvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAC,IAAI;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAAE,OAAM;QAEzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAA;QAC5B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QAE3C,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAA0B,CAAC,CAAA;QAChD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAA2B,CAAC,CAAA;KACjD,CAAC,CAAA;IAEF,IAAI,CAAC,UAAU,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CACrC,2CAA2C,CAC5C,CAAA;IAED,OAAO;QACL,QAAQ,EAAE,UAAU,CAAC,MAAM,KAAK,CAAC;cAC7B,UAAU,CAAC,CAAC,CAAC;cACbC,uCAAmB,CAAC,qBAAqB,CAAC,UAAU,EAAE,IAAI,CAAC;QAE/D,QAAQ,EAAE,SAAS,CAAC,MAAM,KAAK,CAAC;cAC5B,SAAS,CAAC,CAAC,CAAC;cACZ,SAAS;KACd,CAAA;CACF;;ACnED,IAAK,sBAGJ;AAHD,WAAK,sBAAsB;IACzB,uEAAU,CAAA;IACV,wEAAW,CAAA;CACZ,EAHI,sBAAsB,KAAtB,sBAAsB,QAG1B;AAyBD;IAAmEC,kCAAQ;IAczE,wBAAmB,EAQa;YARb,4BAQa,EAP9B,gBAAoB,EAApB,yCAAoB,EACpB,gBAAoB,EAApB,yCAAoB,EACpB,aAAS,EAAT,8BAAS,EACT,aAAgB,EAAhB,qCAAgB,EAChB,iBAAqB,EAArB,0CAAqB,EACrB,qBAAyB,EAAzB,8CAAyB,EACzB,kBAAe,EAAf,oCAAe;QAPjB,YASE,iBAAO,SASR;QAvBM,eAAS,GAAQ,EAAE,CAAA;QACnB,uBAAiB,GAAW,CAAC,CAAA;QAelC,KAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5B,KAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,KAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QAClC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAA;;KACnB;IAED,sBAAW,qCAAS;aAApB;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAA;SACnB;;;OAAA;IAED,sBAAW,oCAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,SAAS,CAAA;SACtB;aAED,UAAoB,CAAwC;YAC1D,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;YAClB,IAAI,CAAC,cAAc,EAAE,CAAA;SACtB;;;OALA;IAOD,sBAAW,oCAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,SAAS,CAAA;SACtB;aAED,UAAoB,CAAkD;YACpE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;YAClB,IAAI,CAAC,cAAc,EAAE,CAAA;SACtB;;;OALA;IAOD,sBAAW,iCAAK;aAAhB;YACE,OAAO,IAAI,CAAC,MAAM,CAAA;SACnB;aAED,UAAiB,CAAiB;YAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;YAEf,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAAE,OAAM;YAE1B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAU,CAAC,GAAA,CAAC,CAAA;aAClE;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAU,CAAC,CAAA;aACpC;SACF;;;OAZA;IAcS,uCAAc,GAAxB;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAM;QAE1B,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAA;YAE/D,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAIJ,aAAO,EAAE,CAAC,CAAA;YAC7D,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,KAAK,SAAS;kBAC1C,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;kBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YAE7C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;SACzC;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;SACnC;KACF;IAES,uCAAc,GAAxB;QAAA,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAM;QAExC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAI,CAAC,KAAc,CAAC,GAAA,CAAC,CAAA;SAC3E;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAc,CAAC,CAAA;SAC7C;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;KACnC;IAES,uCAAc,GAAxB;QACE,OAAO,IAAI,QAAQ,EAAO,CAAA;KAC3B;IAES,wCAAe,GAAzB,UACE,QAAgC,EAChC,OAA+B;QAE/B,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAC7B,kDAAkD;gBAClD,qEAAqE,CACtE,CAAA;QAED,IAAI,QAAY,CAAA;QAEhB,QAAQ,QAAQ;YACd,KAAK,sBAAsB,CAAC,MAAM;gBAChC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAC5D,SAAO,IAAI,CAAC,IAAI,CAAC,KAAK,4CAAyC;wBAC/D,8DAA8D,CAC/D,CAAA;gBAED,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAA;gBAEnD,MAAK;YAEP,KAAK,sBAAsB,CAAC,MAAM;gBAChC,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC;oBAAE,MAAM,IAAI,KAAK,CAC9C,SAAO,IAAI,CAAC,IAAI,CAAC,KAAK,2CAAwC;wBAC9D,mCAAmC,CACpC,CAAA;gBAED,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;gBAEnD,MAAK;SACR;QAED,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAA;QAE5B,OAAO,QAAQ,CAAA;KAChB;IAEM,gCAAO,GAAd,UAAe,IAAU;QACjB,IAAA,oBAAwC,EAAtC,sBAAQ,EAAE,sBAA4B,CAAA;QAE9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;KACzB;IAEM,iCAAQ,GAAf,UAAgB,GAAW,EAAE,QAA+B;QAA5D,iBAKC;QAJC,IAAIK,qBAAU,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,IAAI;YAC9B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YAClB,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAA;SAC3B,CAAC,CAAA;KACH;IAEM,iCAAQ,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,MAAM,IAAI,KAAK,CACnD,6DAA6D,CAC9D,CAAA;QAEK,IAAA,SAGE,EAFN,wBAAS,EACT,gBACM,CAAA;QAER,IAAI,CAAC,WAAW,EAAE,CAAA;QAElB,IAAI,CAAC,IAAI,GAAG,IAAIC,mBAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;QAClE,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;QAE/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAA;QAChE,OAAO,SAAS,CAAC,MAAM,GAAG,KAAK;YAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;QACtE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;QAE5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACpB;IAEM,oCAAW,GAAlB;QACE,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAM;QAEtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAA;KACtB;IAEM,yCAAgB,GAAvB,UAAwB,KAAiB;QAAjB,sBAAA,EAAA,SAAiB;QACvC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,EAAE,GAAA,CAAC,CAAA;KACrE;IAEM,wCAAe,GAAtB;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAM;QAE1B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA;QACvB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAA;KAC1B;IAEM,wCAAe,GAAtB;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAM;QAE1B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;cACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,EAAE,GAAA,CAAC;cACrD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA;QAE3B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAA;KAC1B;IAEM,+BAAM,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAM;QAEtB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QAEtB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,KAAK;YACrC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAAE,OAAM;YAC9B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAA;YACxC,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAA;SACvC,CAAC,CAAA;KACH;IAEM,uCAAc,GAArB,UAAsB,EAIoB;YAJpB,4BAIoB,EAHxC,eAAmB,EAAnB,wCAAmB,EACnB,gBAAoB,EAApB,yCAAoB,EACpB,kBAAmC,EAAnC,wDAAmC;QAEnC,IAAI;aACD,eAAe,CAAC,sBAAsB,CAAC,MAAM,EAAE,OAAO,CAAC;aACvD,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;KAChC;IAEM,uCAAc,GAArB,UAAsB,EAIoB;YAJpB,4BAIoB,EAHxC,eAAmB,EAAnB,wCAAmB,EACnB,gBAAoB,EAApB,yCAAoB,EACpB,kBAAmC,EAAnC,wDAAmC;QAEnC,IAAI;aACD,eAAe,CAAC,sBAAsB,CAAC,MAAM,EAAE,OAAO,CAAC;aACvD,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;KAChC;IAEM,wCAAe,GAAtB,UAAuB,EAQjB;QARiB,mBAAA,EAAA,OAQjB;QAPJ,IAAA,cAAiB,EAAjB,sCAAiB,EACjB,gBAAoB,EAApB,yCAAoB,EACpB,mBAAuB,EAAvB,4CAAuB,EACvB,6DAAY;QAKZ,IAAM,SAAS,GAAQ,EAAE,CAAA;QACzB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAA;QAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;YAAE,IAAI,CAAC,cAAc,cAC/C,SAAS,IACZ,QAAQ,EAAE,UAAC,QAAQ;oBACjB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;oBACxB,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAA;oBAC9B,SAAS,CAAC,MAAM,KAAK,MAAM,IAAI,WAAW,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;iBACrE,IACD,CAAA;KACH;IAEM,wCAAe,GAAtB,UAAuB,EAQjB;QARiB,mBAAA,EAAA,OAQjB;QAPJ,IAAA,cAAiB,EAAjB,sCAAiB,EACjB,gBAAoB,EAApB,yCAAoB,EACpB,mBAAuB,EAAvB,4CAAuB,EACvB,6DAAY;QAKZ,IAAM,SAAS,GAAQ,EAAE,CAAA;QACzB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;QAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;YAAE,IAAI,CAAC,cAAc,cAC/C,SAAS,IACZ,QAAQ,EAAE,UAAC,QAAQ;oBACjB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;oBACxB,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAA;oBAC9B,SAAS,CAAC,MAAM,KAAK,MAAM,IAAI,WAAW,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;iBACrE,IACD,CAAA;KACH;IACH,qBAAC;CA5RD,CAAmEC,cAAQ;;ACxC3E;IAA0BH,wBAAQ;IAAlC;;KAkCC;IAjCQ,0BAAW,GAAlB,UAAmB,KAAY;QAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QAExC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;YAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;YAClC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;YAEvC,IAAI,CAAC,oBAAoB,EAAE,CAAA;YAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAA;YAE3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA;SAC5B;QAED,OAAO,IAAI,CAAA;KACZ;IAEM,0BAAW,GAAlB,UAAmB,MAAsB;QAAtB,uBAAA,EAAA,aAAsB;QACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YAEhC,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,oBAAoB,EAAE,CAAA;gBAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAA;gBAE3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA;aAC5B;SACF;QAED,OAAO,IAAI,CAAA;KACZ;IACH,WAAC;CAlCD,CAA0BI,WAAQ,GAkCjC;;;IC9BqCJ,oCAAQ;IAW5C;QAAA,YACE,iBAAO,SAER;QAbkB,iBAAW,GAAW,QAAQ,CAAA;QAC9B,0BAAoB,GAAS,IAAIK,WAAI,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;QAClD,iCAA2B,GAAS,IAAIA,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACrD,qBAAe,GAAW,KAAK,CAAA;QAExC,cAAQ,GAAY,KAAK,CAAA;QACzB,YAAM,GAAY,KAAK,CAAA;QAM/B,KAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,CAAA;;KAC1C;IAED,sBAAc,4CAAc;aAA5B;YACE,OAAO;gBACL,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,IAAI,CAAC,OAAO;aACnB,CAAA;SACF;;;OAAA;IAES,iCAAM,GAAhB;QACQ,IAAA,cAA0C,EAAxC,sBAAQ,EAAG,oCAA6B,CAAA;QAEhD,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;YAErB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAA;YAE5B,OAAM;SACP;QAEK,IAAA,SAA4D,EAA1D,8CAAoB,EAAE,4DAAoC,CAAA;QAElE,QAAQ,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,CAAA;QACpC,QAAQ,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,CAAA;QACpC,QAAQ,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,CAAA;QAEpC,eAAe,CAAC,CAAC,IAAI,2BAA2B,CAAC,CAAC,CAAA;QAClD,eAAe,CAAC,CAAC,IAAI,2BAA2B,CAAC,CAAC,CAAA;QAClD,eAAe,CAAC,CAAC,IAAI,2BAA2B,CAAC,CAAC,CAAA;KACnD;IAES,wCAAa,GAAvB;QAAA,iBAMC;QALC,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ;YAAE,OAAM;QACzC,IAAI,CAAC,YAAY,EAAE,CAAA;QACnB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC;YACrC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;SACrB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA;KACrB;IAES,uCAAY,GAAtB;QACE,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;YAAE,OAAM;QAC5C,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;QAChC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAA;KAC/B;IAEM,iCAAM,GAAb,UACE,UAA+B,EAC/B,QAAmC;QAFrC,iBAUC;QANC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAA;QAC7B,iBAAM,MAAM,YAAC,UAAU,EAAE,UAAC,QAAQ;YAChC,KAAI,CAAC,aAAa,EAAE,CAAA;YACpB,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAA;SAC/B,CAAC,CAAA;KACH;IAEM,iCAAM,GAAb,UACE,UAA+B,EAC/B,QAAmC;QAEnC,IAAI,CAAC,YAAY,EAAE,CAAA;QACnB,iBAAM,MAAM,YAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;KACnC;IAEM,iCAAM,GAAb;QACE,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,KAAK,CAAA;QACnC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE,CAAA;QAC9B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,EAAE,CAAA;QACrC,OAAO,iBAAM,MAAM,WAAE,CAAA;KACtB;IAEM,yCAAc,GAArB;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAA;KACxB;IAEM,uCAAY,GAAnB,UAAoB,KAAY;QAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;KAC1B;IAEM,0CAAe,GAAtB;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAA8B,CAAC,CAAA;QAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAmC,CAAC,CAAA;KACpE;IAEM,4CAAiB,GAAxB;QACQ,IAAA,kBAA2B,EAAzB,QAAC,EAAE,QAAC,EAAE,QAAmB,CAAA;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KAChC;IAEM,8CAAmB,GAA1B;QACQ,IAAA,oBAAgC,EAA9B,QAAC,EAAE,QAAC,EAAE,QAAC,EAAE,QAAqB,CAAA;QACtC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KACrC;IAEM,4CAAiB,GAAxB;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KAChC;IAEM,mDAAwB,GAA/B;QACE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KACvC;IACH,uBAAC;CAtHD,CAAsC,QAAQ;;;ICQFL,0CAAgC;IAI1E,gCAAmB,EAGgB;QAFjC,IAAA,gBAAK,EACL,kCAAa;QAFf,YAIE,kBAAM,UAAU,CAAC,SAElB;QADC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAA;;KACnB;IAES,+CAAc,GAAxB;QACE,iBAAM,cAAc,WAAE,CAAA;QAEtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAM,OAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;YAC7C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,YAAY,CAAC,OAAK,CAAC,GAAA,CAAC,CAAA;SACjE;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,cAAc,EAAE,GAAA,CAAC,CAAA;SAC9D;KACF;IAES,4CAAW,GAArB;QACE,IAAI,CAAC,QAAS,CAAC,WAAW,IAAI,IAAI,CAAC,QAAS,CAAC,kBAAkB,EAAE,CAAA;QAEjE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAS,CAAC,WAAW,CAAA;QAEtC,OAAO,IAAIM,UAAG,CAAC,IAAID,WAAI,CACrB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAC3B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAC3B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC5B,CAAC,CAAA;KACH;IAES,+CAAc,GAAxB;QACE,IAAM,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAA;QACvC,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC/C,OAAO,QAAQ,CAAA;KAChB;IAEM,+CAAc,GAArB,UAAsB,EAGmC;QAHzD,iBAkBC;QAlBqB,mBAAA,EAAA,OAGmC;QAFvD,IAAA,eAAmB,EAAnB,wCAAmB,EACnB,mCAAY;QAEZ,iBAAM,cAAc,yBACf,SAAS,IACZ,OAAO,EAAE,UAAC,QAAQ;gBAChB,QAAQ,CAAC,iBAAiB,EAAE,CAAA;gBAC5B,QAAQ,CAAC,wBAAwB,EAAE,CAAA;gBAEnC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAA;gBAE5B,QAAQ,CAAC,iBAAiB,EAAE,CAAA;gBAC5B,QAAQ,CAAC,mBAAmB,EAAE,CAAA;gBAE9B,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;aAClC,IACD,CAAA;KACH;IAEM,+CAAc,GAArB,UAAsB,EAGmC;QAHzD,iBAWC;QAXqB,mBAAA,EAAA,OAGmC;QAFvD,IAAA,gBAAoB,EAApB,yCAAoB,EACpB,oCAAY;QAEZ,iBAAM,cAAc,yBACf,SAAS,IACZ,QAAQ,EAAE,UAAC,QAAQ;gBACjB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;gBAChC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAA;aAC/B,IACD,CAAA;KACH;IACH,6BAAC;CAzED,CAA4C,cAAc;;;ICiB/BL,yBAAS;IAApC;QAAA,qEA0IC;QAzIS,qBAAe,GAAmB,KAAI,CAAC,mBAAmB,CAAA;QAC1D,oBAAc,GAAmB,KAAI,CAAC,qBAAqB,CAAA;QAI3D,gCAA0B,GAE9B,EAAE,CAAA;QAEC,+BAAyB,GAAY,KAAK,CAAA;QAC1C,sCAAgC,GAAY,IAAI,CAAA;;KA+HxD;IA7HC,sBAAW,iCAAc;aAAzB;YACE,OAAO,IAAI,CAAC,eAAe,CAAA;SAC5B;aAED,UAA0B,CAAiB;YAA3C,iBASC;YARC,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,eAAe,GAAG;oBAAC,oBAAa;yBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;wBAAb,+BAAa;;oBACnC,KAAI,CAAC,mBAAmB,EAAE,CAAA;oBAC1B,CAAC,eAAI,UAAU,EAAC;iBACjB,CAAA;aACF;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAA;aAChD;SACF;;;OAXA;IAaD,sBAAW,gCAAa;aAAxB;YACE,OAAO,IAAI,CAAC,cAAc,CAAA;SAC3B;aAED,UAAyB,CAAiB;YAA1C,iBASC;YARC,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,cAAc,GAAG;oBAAC,oBAAa;yBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;wBAAb,+BAAa;;oBAClC,KAAI,CAAC,qBAAqB,EAAE,CAAA;oBAC5B,CAAC,eAAI,UAAU,EAAC;iBACjB,CAAA;aACF;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAA;aACjD;SACF;;;OAXA;IAaO,mCAAmB,GAA3B;QAAA,iBA4CC;QA3CC,IAAI,CAAC,IAAI,CAAC,gCAAgC;YAAE,OAAM;QAElD,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAA;QAE9C,IAAI,CAAC,gBAAgB;YAAE,OAAM;QAE7B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAA;QACzC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAA;QAE5B,IAAM,EAAE,GAAG,gBAAgB,CAAC,EAAE,CAAA;QAC9B,IAAM,OAAO,GAAI,gBAAmD,CAAC,OAAO,CAAA;QAE5E,IAAI,CAAC,eAAe,GAAG,EAAE,CAAA;QAEzB,IAAI,CAAC,uBAAuB,CAAC,UAAC,MAAM;YAClC,IAAI,QAAQ,GAAa,gBAAgB,CAAA;YAEzC,IACE,eAAe,CAAC,MAAM,CAAC;gBACvB,yBAAyB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAC1C;gBACA,IAAI,iBAAiB,GAAG,KAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAA;gBAE3D,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,OAAO,KAAK,OAAO,EAAE;oBAC9D,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAA;iBACtC;qBAAM;oBACL,QAAQ,GAAG,gBAAgB,CAAC,KAAK,EAAE,CAAA;oBAEnC,IAAI,iBAAiB,EAAE;wBACrB,iBAAiB,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA;wBACpC,iBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAA;wBACrC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAA;qBACpC;yBAAM;wBACL,iBAAiB,GAAG,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,CAAA;qBAC1C;oBAED,KAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAA;iBACxD;aACF;YAED,KAAI,CAAC,eAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAA;YAClD,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAA;SAC3B,CAAC,CAAA;KACH;IAEO,qCAAqB,GAA7B;QAAA,iBAaC;QAZC,IACE,CAAC,IAAI,CAAC,gCAAgC;YACtC,CAAC,IAAI,CAAC,iBAAiB;YACvB,OAAM;QAER,IAAI,CAAC,uBAAuB,CAAC,UAAC,MAAM;YAClC,MAAM,CAAC,QAAQ,GAAG,KAAI,CAAC,eAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;SACnD,CAAC,CAAA;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAA;QAC9C,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAA;QAClC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAA;KACjC;IAEM,uCAAuB,GAA9B,UACE,QAAgE;QADlE,iBAqBC;QAlBC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAC3D,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAA;YACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAA;YAEzB,IAAI,CAAC,QAAQ,CAAC,UAAC,MAAM;gBACnB,IACE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACf,CAAC,MAAM,CAAC,MAAM,CAAC;oBACf,CAAC,QAAQ,CAAC,MAAM,CAAC;oBACjB,CAAC,eAAe,CAAC,MAAM,CAAC;oBACxB,OAAM;gBAER,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAA;gBAClC,KAAI,CAAC,eAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;aACnC,CAAC,CAAA;SACH;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAA,CAAC,CAAA;SAC3E;KACF;IAEM,uBAAO,GAAd;QACE,iBAAM,OAAO,WAAE,CAAA;QAEf,IAAI,CAAC,eAAe,GAAG,SAAS,CAAA;QAEhC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,0BAA0B,EAAE;YAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAA;YAC7D,QAAQ,CAAC,OAAO,EAAE,CAAA;YAClB,OAAO,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAA;SAC3C;KACF;IACH,YAAC;CA1ID,CAA2BO,WAAS;;;;;;;;;"}